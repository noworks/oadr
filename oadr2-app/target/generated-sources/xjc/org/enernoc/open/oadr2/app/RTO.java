//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.15 at 04:27:19 PM PST 
//


package org.enernoc.open.oadr2.app;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RTO complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RTO">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://oasis.caiso.com/mrtu-oasis/xsd/OASISReport.xsd}name"/>
 *         &lt;element name="REPORT_ITEM" type="{http://oasis.caiso.com/mrtu-oasis/xsd/OASISReport.xsd}REPORT_ITEM" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="DISCLAIMER_ITEM" type="{http://oasis.caiso.com/mrtu-oasis/xsd/OASISReport.xsd}DISCLAIMER_ITEMRq"/>
 *         &lt;element name="ERROR" type="{http://oasis.caiso.com/mrtu-oasis/xsd/OASISReport.xsd}ERROR" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RTO", propOrder = {
    "name",
    "reportitem",
    "disclaimeritem",
    "error"
})
@Entity(name = "RTO")
@Table(name = "RTO")
@Inheritance(strategy = InheritanceType.JOINED)
public class RTO implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected Name name;
    @XmlElement(name = "REPORT_ITEM")
    protected List<REPORTITEM> reportitem;
    @XmlElement(name = "DISCLAIMER_ITEM", required = true)
    protected DISCLAIMERITEMRq disclaimeritem;
    @XmlElement(name = "ERROR")
    protected List<ERROR> error;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Default no-arg constructor
     * 
     */
    public RTO() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public RTO(final Name name, final List<REPORTITEM> reportitem, final DISCLAIMERITEMRq disclaimeritem, final List<ERROR> error) {
        this.name = name;
        this.reportitem = reportitem;
        this.disclaimeritem = disclaimeritem;
        this.error = error;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link Name }
     *     
     */
    @Basic
    @Column(name = "NAME_", length = 255)
    @Enumerated(EnumType.STRING)
    public Name getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link Name }
     *     
     */
    public void setName(Name value) {
        this.name = value;
    }

    /**
     * Gets the value of the reportitem property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reportitem property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getREPORTITEM().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link REPORTITEM }
     * 
     * 
     */
    @OneToMany(targetEntity = REPORTITEM.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REPORTITEM_RTO_HJID")
    public List<REPORTITEM> getREPORTITEM() {
        if (reportitem == null) {
            reportitem = new ArrayList<REPORTITEM>();
        }
        return this.reportitem;
    }

    /**
     * 
     * 
     */
    public void setREPORTITEM(List<REPORTITEM> reportitem) {
        this.reportitem = reportitem;
    }

    /**
     * Gets the value of the disclaimeritem property.
     * 
     * @return
     *     possible object is
     *     {@link DISCLAIMERITEMRq }
     *     
     */
    @ManyToOne(targetEntity = DISCLAIMERITEMRq.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DISCLAIMERITEM_RTO_HJID")
    public DISCLAIMERITEMRq getDISCLAIMERITEM() {
        return disclaimeritem;
    }

    /**
     * Sets the value of the disclaimeritem property.
     * 
     * @param value
     *     allowed object is
     *     {@link DISCLAIMERITEMRq }
     *     
     */
    public void setDISCLAIMERITEM(DISCLAIMERITEMRq value) {
        this.disclaimeritem = value;
    }

    /**
     * Gets the value of the error property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the error property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getERROR().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ERROR }
     * 
     * 
     */
    @OneToMany(targetEntity = ERROR.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ERROR_RTO_HJID")
    public List<ERROR> getERROR() {
        if (error == null) {
            error = new ArrayList<ERROR>();
        }
        return this.error;
    }

    /**
     * 
     * 
     */
    public void setERROR(List<ERROR> error) {
        this.error = error;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Name theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            List<REPORTITEM> theREPORTITEM;
            theREPORTITEM = (((this.reportitem!= null)&&(!this.reportitem.isEmpty()))?this.getREPORTITEM():null);
            strategy.appendField(locator, this, "reportitem", buffer, theREPORTITEM);
        }
        {
            DISCLAIMERITEMRq theDISCLAIMERITEM;
            theDISCLAIMERITEM = this.getDISCLAIMERITEM();
            strategy.appendField(locator, this, "disclaimeritem", buffer, theDISCLAIMERITEM);
        }
        {
            List<ERROR> theERROR;
            theERROR = (((this.error!= null)&&(!this.error.isEmpty()))?this.getERROR():null);
            strategy.appendField(locator, this, "error", buffer, theERROR);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RTO)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RTO that = ((RTO) object);
        {
            Name lhsName;
            lhsName = this.getName();
            Name rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            List<REPORTITEM> lhsREPORTITEM;
            lhsREPORTITEM = (((this.reportitem!= null)&&(!this.reportitem.isEmpty()))?this.getREPORTITEM():null);
            List<REPORTITEM> rhsREPORTITEM;
            rhsREPORTITEM = (((that.reportitem!= null)&&(!that.reportitem.isEmpty()))?that.getREPORTITEM():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportitem", lhsREPORTITEM), LocatorUtils.property(thatLocator, "reportitem", rhsREPORTITEM), lhsREPORTITEM, rhsREPORTITEM)) {
                return false;
            }
        }
        {
            DISCLAIMERITEMRq lhsDISCLAIMERITEM;
            lhsDISCLAIMERITEM = this.getDISCLAIMERITEM();
            DISCLAIMERITEMRq rhsDISCLAIMERITEM;
            rhsDISCLAIMERITEM = that.getDISCLAIMERITEM();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "disclaimeritem", lhsDISCLAIMERITEM), LocatorUtils.property(thatLocator, "disclaimeritem", rhsDISCLAIMERITEM), lhsDISCLAIMERITEM, rhsDISCLAIMERITEM)) {
                return false;
            }
        }
        {
            List<ERROR> lhsERROR;
            lhsERROR = (((this.error!= null)&&(!this.error.isEmpty()))?this.getERROR():null);
            List<ERROR> rhsERROR;
            rhsERROR = (((that.error!= null)&&(!that.error.isEmpty()))?that.getERROR():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "error", lhsERROR), LocatorUtils.property(thatLocator, "error", rhsERROR), lhsERROR, rhsERROR)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Name theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            List<REPORTITEM> theREPORTITEM;
            theREPORTITEM = (((this.reportitem!= null)&&(!this.reportitem.isEmpty()))?this.getREPORTITEM():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportitem", theREPORTITEM), currentHashCode, theREPORTITEM);
        }
        {
            DISCLAIMERITEMRq theDISCLAIMERITEM;
            theDISCLAIMERITEM = this.getDISCLAIMERITEM();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "disclaimeritem", theDISCLAIMERITEM), currentHashCode, theDISCLAIMERITEM);
        }
        {
            List<ERROR> theERROR;
            theERROR = (((this.error!= null)&&(!this.error.isEmpty()))?this.getERROR():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "error", theERROR), currentHashCode, theERROR);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public RTO withName(Name value) {
        setName(value);
        return this;
    }

    public RTO withREPORTITEM(REPORTITEM... values) {
        if (values!= null) {
            for (REPORTITEM value: values) {
                getREPORTITEM().add(value);
            }
        }
        return this;
    }

    public RTO withREPORTITEM(Collection<REPORTITEM> values) {
        if (values!= null) {
            getREPORTITEM().addAll(values);
        }
        return this;
    }

    public RTO withREPORTITEM(List<REPORTITEM> reportitem) {
        setREPORTITEM(reportitem);
        return this;
    }

    public RTO withDISCLAIMERITEM(DISCLAIMERITEMRq value) {
        setDISCLAIMERITEM(value);
        return this;
    }

    public RTO withERROR(ERROR... values) {
        if (values!= null) {
            for (ERROR value: values) {
                getERROR().add(value);
            }
        }
        return this;
    }

    public RTO withERROR(Collection<ERROR> values) {
        if (values!= null) {
            getERROR().addAll(values);
        }
        return this;
    }

    public RTO withERROR(List<ERROR> error) {
        setERROR(error);
        return this;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

}
